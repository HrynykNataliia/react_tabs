{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","findSelectedTab","tabs","selectedTabId","find","tab","id","this","props","onTabSelected","className","map","classNames","href","onClick","event","preventDefault","title","content","React","Component","tabsFromServer","App","state","selectedTab","handleTabSelected","setState","ReactDOM","render","document","getElementById"],"mappings":"+MASaA,EAAb,4MACEC,gBAAkB,SAACC,EAAaC,GAC9B,OAAOD,EAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,MAAkBD,EAAK,IAF9D,4CAKE,WACE,MAA+CK,KAAKC,MAA5CN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,cAAeM,EAA7B,EAA6BA,cAE7B,OACE,qCACE,qBAAKC,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAAAN,GAAG,OACX,oBAEEK,UAAWE,IAAW,CAAE,YAAaP,EAAIC,KAAOH,IAFlD,SAIE,mBACEU,KAAK,IACLC,QAAS,SAACC,GACRA,EAAMC,iBACNP,EAAcJ,IAJlB,SAOGA,EAAIY,SAVFZ,EAAIC,WAgBjB,mBAAGI,UAAU,MAAb,SAAoBH,KAAKN,gBAAgBC,EAAMC,GAAee,iBA9BtE,GAA0BC,IAAMC,WCL1BC,EAAwB,CAC5B,CAAEf,GAAI,QAASW,MAAO,QAASC,QAAS,eACxC,CAAEZ,GAAI,QAASW,MAAO,QAASC,QAAS,eACxC,CAAEZ,GAAI,QAASW,MAAO,QAASC,QAAS,gBAQpCI,E,4MACJC,MAAe,CACbrB,KAAMmB,EACNG,YAAaH,EAAe,I,EAG9BI,kBAAoB,SAACD,GACnB,EAAKE,SAAS,CACZF,iB,4CAIJ,WACE,MAA8BjB,KAAKgB,MAA3BrB,EAAR,EAAQA,KAAMsB,EAAd,EAAcA,YAEd,OACE,sBAAKd,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,mCAA0Cc,EAAYP,SACtD,cAAC,EAAD,CACEf,KAAMA,EACNC,cAAeqB,EAAYlB,GAC3BG,cAAeF,KAAKkB,2B,GArBZN,IAAMC,WA4BTE,ICvCfK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d4c710ec.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport class Tabs extends React.Component<Props, {}> {\n  findSelectedTab = (tabs: Tab[], selectedTabId: string) => {\n    return tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n  };\n\n  render() {\n    const { tabs, selectedTabId, onTabSelected } = this.props;\n\n    return (\n      <>\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => (\n              <li\n                key={tab.id}\n                className={classNames({ 'is-active': tab.id === selectedTabId })}\n              >\n                <a\n                  href=\"/\"\n                  onClick={(event) => {\n                    event.preventDefault();\n                    onTabSelected(tab);\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <p className=\"box\">{this.findSelectedTab(tabs, selectedTabId).content}</p>\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport { Tabs } from './components/Tabs/Tabs';\n\nconst tabsFromServer: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype State = {\n  tabs: Tab[],\n  selectedTab: Tab,\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    tabs: tabsFromServer,\n    selectedTab: tabsFromServer[0],\n  };\n\n  handleTabSelected = (selectedTab: Tab) => {\n    this.setState({\n      selectedTab,\n    });\n  };\n\n  render() {\n    const { tabs, selectedTab } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">{`Selected tab is ${selectedTab.title}`}</h1>\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTab.id}\n          onTabSelected={this.handleTabSelected}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}